name: Pre-Release

on: 
  pull_request:
    branches:
      - main

env:
  APP_NAME: 'my-tauri-app'
  NODE_VERSION: '16.x'
  RUST_VERSION: 'stable'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    
    runs-on: ${{ matrix.platform }}
    
    steps:

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-20.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev \
        libayatana-appindicator3-dev librsvg2-dev

    - name: Cache dependencies
      uses: actions/cache@v4.0.1
      with:
        path: './${{ env.APP_NAME }}/node_modules'
        key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock', '**/package-lock.json') }}

    - uses: actions/cache@v4.0.1
      with:
        path: ./${{ env.APP_NAME }}/dist
        key: ${{ runner.os }}-frontend-build-${{ hashFiles('**/package-lock.json') }}

    - uses: actions/setup-node@v4.0.2
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Create Tauri App
      run: |
        cargo install create-tauri-app;
        cargo create-tauri-app --yes ${{ env.APP_NAME }} --template vue --manager npm || true

    - name: Replace bundle identifier
      working-directory: ./${{ env.APP_NAME }}/src-tauri
      shell: pwsh
      run: |
        $file = 'tauri.conf.json'

        $content = Get-Content $file
        $content = $content -replace '"identifier": "com\.tauri\.dev"', '"identifier": "com.${{ github.event.repository.name }}"'
        Set-Content $file $content
        
    - name: Install Dependencies
      working-directory: ./${{ env.APP_NAME }}
      run: npm install

    - name: Build Tauri App
      id: build
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        releaseDraft: true
        projectPath: ./${{ env.APP_NAME }}
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: ${{ matrix.platform }}-build
        path: ./${{ env.APP_NAME }}/src-tauri/target/release/bundle/*

    - name: Run backend tests
      working-directory: ./${{ env.APP_NAME }}/src-tauri
      run: cargo test

    - name: Create Release
      id: create_release
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: v${{ github.ref_name }}
        releaseName: "v${{ github.ref_name }}"
        releaseBody: ${{ steps.build.outputs.changelog }}
        releaseDraft: true
        projectPath: ./${{ env.APP_NAME }}
